/*
 * Copyright (C) 2013 Brett Wooldridge
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.zaxxer.hikari;

import java.sql.CallableStatement;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

/**
 * This class is a "throwaway" class that implements the methods of java.sql.Connection
 * that we need to override.  The ConnectionProxy inherits from this class to allow it
 * to compile, but at runtime Javassist will replace the superclass (this class) of
 * ConnectionProxy to the actual Connection implementation class provided by the JDBC
 * driver.
 *
 * @author Brett Wooldridge
 */
public class ThrowawayConnection
{
    public Statement createStatement() throws SQLException
    {
        return null;
    }

    public Statement createStatement(int resultSetType, int resultSetConcurrency) throws SQLException
    {
        return null;
    }

    public Statement createStatement(int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException
    {
        return null;
    }

    public CallableStatement prepareCall(String sql) throws SQLException
    {
        return null;
    }

    public CallableStatement prepareCall(String sql, int resultSetType, int resultSetConcurrency) throws SQLException
    {
        return null;
    }

    public CallableStatement prepareCall(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException
    {
        return null;
    }

    public PreparedStatement prepareStatement(String sql) throws SQLException
    {
        return null;
    }

    public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException
    {
        return null;
    }

    public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency) throws SQLException
    {
        return null;
    }

    public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException
    {
        return null;
    }

    public PreparedStatement prepareStatement(String sql, int[] columnIndexes) throws SQLException
    {
        return null;
    }

    public PreparedStatement prepareStatement(String sql, String[] columnNames) throws SQLException
    {
        return null;
    }

    public void close() throws SQLException
    {
    }
}
